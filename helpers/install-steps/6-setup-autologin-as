#!/bin/bash
source $DIR/functions/successfull

OCTOPRINT_EXEC=$(ps -ef | grep octoprint | grep -v grep | awk '{print $9}')
OCTOPRINT_EXEC_USER=$(ps -ef | grep octoprint | grep -v grep | awk '{print $1}')

echo ""
if [ -z "$OCTOPRINT_EXEC" ]
then
	echo "Skipping setup autoLogin for localhost:"
	echo " - OctoPrint exec path not found. Please create a ticket in GitHub!"
else
	# Force allowFraming to be true
	runCmd su - $OCTOPRINT_EXEC_USER -c "$OCTOPRINT_EXEC config set --bool server.allowFraming true"

	OCTOPRINT_USER=$(whiptail --inputbox \
		"Insert the username that can auto login into OctoPrint (Leave this empty to skip this step)" \
		8 78 --title "Setup autoLogin for localhost" 3>&1 1>&2 2>&3)

	if [ -n "$OCTOPRINT_USER" ]
	then
		echo "Saving autoLogin to config ($OCTOPRINT_CONFIG)"

		runCmd su - $OCTOPRINT_EXEC_USER -c "$OCTOPRINT_EXEC config set --bool accessControl.autologinLocal true"
		runCmd su - $OCTOPRINT_EXEC_USER -c "$OCTOPRINT_EXEC config set accessControl.autologinAs $OCTOPRINT_USER"

		CAN_REBOOT=$(whiptail \
			--yesno "Can we restart OctoPrint? (If not; you need to restart OctoPrint manually before you can make use of the autoLogin configuration)" 8 78 3>&1 1>&2 2>&3)

		if [ -n "$CAN_REBOOT" ]
		then
			echo ""
			echo "Restarting OctoPrint:"
			runCmd service octoprint restart
			successfull $?
		fi
	else
		echo "Skipping setup autoLogin for localhost:"
		echo " - Cancelled by user"
	fi
fi
