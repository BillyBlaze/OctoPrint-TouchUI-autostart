#!/bin/bash
DIR=$(cd -P -- "$(dirname -- "$0")" && pwd -P)

# Get CLI override (e.g. -browser my-browser or --force)
. $DIR/getopts
. $DIR/functions

# If CLI override is null, set default
[ "$BROWSER" == "" ] && BROWSER="chromium-browser"
[ "$FORCE" == "" ] && FORCE=false
[ "$XORG_DIR" == "" ] && XORG_DIR="/usr/share/X11/xorg.conf.d"
[ "$OCTOPRINT_CONFIG" == "" ] && OCTOPRINT_CONFIG="/home/pi/.octoprint/config.yaml"
[ "$SKIP_GLDRIVER" == "" ] && SKIP_GLDRIVER=false

# Enforce this helper to be run as root
if [ $(id -u) -ne 0 ]
then 
	echo -e ""
	echo -e " $(color 'red' 'Run this with \e[1msudo\e[0m\e[31m or as an \e[1muser root')" 2>&1
	echo -e " $(color 'red' 'Since we need to install and configure packages')" 2>&1
	echo -e " $(color 'red' 'sudo IS needed here!')" 2>&1
	echo -e ""
	exit 1
fi

# Show introduction
echo -e "$(color 'touchui' ' ╔╦╗╔═╗╦ ╦╔═╗╦ ╦╦ ╦╦ ')"
echo -e "$(color 'touchui' '  ║ ║ ║║ ║║  ╠═╣║ ║║ ')"
echo -e "$(color 'touchui' '  ╩ ╚═╝╚═╝╚═╝╩ ╩╚═╝╩ ')"
echo -e "$(color 'touchui' 'Install helper v0.0.1')"
[ $FORCE == true ] && echo -e "$(color 'touchui' 'Force mode enabled')"

# Stop TouchUI if it's active
service touchui stop >/dev/null 2>&1

# Execute steps
. $DIR/steps/0-check-touchui
. $DIR/steps/1-check-mounted-sd
. $DIR/steps/2-boot-to-command
. $DIR/steps/3-apt-get-install
. $DIR/steps/4-xorg-setup
. $DIR/steps/5-setup-startup
. $DIR/steps/6-setup-autologin-as

# Legacy
# Try to set Xwrapper.config
sed -i 's/allowed_users=console/allowed_users=anybody/' /etc/X11/Xwrapper.config >/dev/null 2>&1

# Show success message
echo ""
echo "TouchUI is successfully installed, Do not remove the directory"
echo "'~/TouchUI-autostart' and if you change the path of this directory"
echo "then edit the file '/etc/default/touchui' with the new path."

# Finally check if chromium-browser is able to run with the kernel
. $DIR/steps/7-check-chromium

# Launch TouchUI
echo ""
echo "Launching TouchUI:"
service touchui start
successfull $?

exit 0
